// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

PRAGMA_DISABLE_DEPRECATION_WARNINGS
class UBaseAbility;
enum class EAbilityResult : uint8;
#ifdef BLINKCOMBATSYSTEM_BlinkCombatSystemComponent_generated_h
#error "BlinkCombatSystemComponent.generated.h already included, missing '#pragma once' in BlinkCombatSystemComponent.h"
#endif
#define BLINKCOMBATSYSTEM_BlinkCombatSystemComponent_generated_h

#define BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_RPC_WRAPPERS \
	virtual void OnAbilityAffect_Implementation(int32 index); \
	virtual bool UseAbility_Validate(int32 ); \
	virtual void UseAbility_Implementation(int32 index); \
 \
	DECLARE_FUNCTION(execGetDefaultAbilityObj) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_index); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(UBaseAbility**)Z_Param__Result=this->GetDefaultAbilityObj(Z_Param_index); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execIsCD) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_index); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=this->IsCD(Z_Param_index); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execIsIndexValid) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_index); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=this->IsIndexValid(Z_Param_index); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execOnAbilityAffect) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_index); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		this->OnAbilityAffect_Implementation(Z_Param_index); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execUseAbility) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_index); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		if (!this->UseAbility_Validate(Z_Param_index)) \
		{ \
			RPC_ValidateFailed(TEXT("UseAbility_Validate")); \
			return; \
		} \
		this->UseAbility_Implementation(Z_Param_index); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execTryUseAbility) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_Index); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(EAbilityResult*)Z_Param__Result=this->TryUseAbility(Z_Param_Index); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetAtkSpeed) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=this->GetAtkSpeed(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetMoveSpeed) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=this->GetMoveSpeed(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetDef) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=this->GetDef(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetAtk) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=this->GetAtk(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetMaxMP) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=this->GetMaxMP(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetMP) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=this->GetMP(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetMaxHP) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=this->GetMaxHP(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetHP) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=this->GetHP(); \
		P_NATIVE_END; \
	}


#define BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_RPC_WRAPPERS_NO_PURE_DECLS \
	virtual void OnAbilityAffect_Implementation(int32 index); \
	virtual bool UseAbility_Validate(int32 ); \
	virtual void UseAbility_Implementation(int32 index); \
 \
	DECLARE_FUNCTION(execGetDefaultAbilityObj) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_index); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(UBaseAbility**)Z_Param__Result=this->GetDefaultAbilityObj(Z_Param_index); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execIsCD) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_index); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=this->IsCD(Z_Param_index); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execIsIndexValid) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_index); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=this->IsIndexValid(Z_Param_index); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execOnAbilityAffect) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_index); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		this->OnAbilityAffect_Implementation(Z_Param_index); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execUseAbility) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_index); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		if (!this->UseAbility_Validate(Z_Param_index)) \
		{ \
			RPC_ValidateFailed(TEXT("UseAbility_Validate")); \
			return; \
		} \
		this->UseAbility_Implementation(Z_Param_index); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execTryUseAbility) \
	{ \
		P_GET_PROPERTY(UIntProperty,Z_Param_Index); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(EAbilityResult*)Z_Param__Result=this->TryUseAbility(Z_Param_Index); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetAtkSpeed) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=this->GetAtkSpeed(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetMoveSpeed) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=this->GetMoveSpeed(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetDef) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=this->GetDef(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetAtk) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=this->GetAtk(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetMaxMP) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=this->GetMaxMP(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetMP) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=this->GetMP(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetMaxHP) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=this->GetMaxHP(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execGetHP) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=this->GetHP(); \
		P_NATIVE_END; \
	}


#define BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_EVENT_PARMS \
	struct BlinkCombatSystemComponent_eventOnAbilityAffect_Parms \
	{ \
		int32 index; \
	}; \
	struct BlinkCombatSystemComponent_eventUseAbility_Parms \
	{ \
		int32 index; \
	};


extern BLINKCOMBATSYSTEM_API  FName BLINKCOMBATSYSTEM_OnAbilityAffect;
extern BLINKCOMBATSYSTEM_API  FName BLINKCOMBATSYSTEM_UseAbility;
#define BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_CALLBACK_WRAPPERS
#define BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_INCLASS_NO_PURE_DECLS \
	private: \
	static void StaticRegisterNativesUBlinkCombatSystemComponent(); \
	friend BLINKCOMBATSYSTEM_API class UClass* Z_Construct_UClass_UBlinkCombatSystemComponent(); \
	public: \
	DECLARE_CLASS(UBlinkCombatSystemComponent, UActorComponent, COMPILED_IN_FLAGS(0), 0, TEXT("/Script/BlinkCombatSystem"), NO_API) \
	DECLARE_SERIALIZER(UBlinkCombatSystemComponent) \
	/** Indicates whether the class is compiled into the engine */ \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC};


#define BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_INCLASS \
	private: \
	static void StaticRegisterNativesUBlinkCombatSystemComponent(); \
	friend BLINKCOMBATSYSTEM_API class UClass* Z_Construct_UClass_UBlinkCombatSystemComponent(); \
	public: \
	DECLARE_CLASS(UBlinkCombatSystemComponent, UActorComponent, COMPILED_IN_FLAGS(0), 0, TEXT("/Script/BlinkCombatSystem"), NO_API) \
	DECLARE_SERIALIZER(UBlinkCombatSystemComponent) \
	/** Indicates whether the class is compiled into the engine */ \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC};


#define BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UBlinkCombatSystemComponent(const FObjectInitializer& ObjectInitializer); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UBlinkCombatSystemComponent) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UBlinkCombatSystemComponent); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UBlinkCombatSystemComponent); \
private: \
	/** Private move- and copy-constructors, should never be used */ \
	NO_API UBlinkCombatSystemComponent(UBlinkCombatSystemComponent&&); \
	NO_API UBlinkCombatSystemComponent(const UBlinkCombatSystemComponent&); \
public:


#define BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_ENHANCED_CONSTRUCTORS \
private: \
	/** Private move- and copy-constructors, should never be used */ \
	NO_API UBlinkCombatSystemComponent(UBlinkCombatSystemComponent&&); \
	NO_API UBlinkCombatSystemComponent(const UBlinkCombatSystemComponent&); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UBlinkCombatSystemComponent); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UBlinkCombatSystemComponent); \
	DEFINE_DEFAULT_CONSTRUCTOR_CALL(UBlinkCombatSystemComponent)


#define BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_PRIVATE_PROPERTY_OFFSET
#define BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_13_PROLOG \
	BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_EVENT_PARMS


#define BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_PRIVATE_PROPERTY_OFFSET \
	BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_RPC_WRAPPERS \
	BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_CALLBACK_WRAPPERS \
	BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_INCLASS \
	BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_STANDARD_CONSTRUCTORS \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_PRIVATE_PROPERTY_OFFSET \
	BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_RPC_WRAPPERS_NO_PURE_DECLS \
	BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_CALLBACK_WRAPPERS \
	BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_INCLASS_NO_PURE_DECLS \
	BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h_16_ENHANCED_CONSTRUCTORS \
private: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID BattleOfShips_Plugins_BlinkCombatSystem_Source_BlinkCombatSystem_Public_BlinkCombatSystemComponent_h


PRAGMA_ENABLE_DEPRECATION_WARNINGS
