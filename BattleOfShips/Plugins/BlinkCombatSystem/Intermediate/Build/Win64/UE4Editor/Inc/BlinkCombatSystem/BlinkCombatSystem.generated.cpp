// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "Public/BlinkCombatSystem.h"
#include "BlinkCombatSystem.generated.dep.h"
PRAGMA_DISABLE_OPTIMIZATION
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1BlinkCombatSystem() {}
FName BLINKCOMBATSYSTEM_OnAbilityAffect = FName(TEXT("OnAbilityAffect"));
FName BLINKCOMBATSYSTEM_OnAffect_Multi = FName(TEXT("OnAffect_Multi"));
FName BLINKCOMBATSYSTEM_OnUse_Server = FName(TEXT("OnUse_Server"));
FName BLINKCOMBATSYSTEM_UseAbility = FName(TEXT("UseAbility"));
static class UEnum* EAbilityResult_StaticEnum()
{
	extern BLINKCOMBATSYSTEM_API class UPackage* Z_Construct_UPackage__Script_BlinkCombatSystem();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern BLINKCOMBATSYSTEM_API class UEnum* Z_Construct_UEnum_BlinkCombatSystem_EAbilityResult();
		Singleton = GetStaticEnum(Z_Construct_UEnum_BlinkCombatSystem_EAbilityResult, Z_Construct_UPackage__Script_BlinkCombatSystem(), TEXT("EAbilityResult"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAbilityResult(EAbilityResult_StaticEnum, TEXT("/Script/BlinkCombatSystem"), TEXT("EAbilityResult"), false, nullptr, nullptr);
class UScriptStruct* FBaseAblityStruct::StaticStruct()
{
	extern BLINKCOMBATSYSTEM_API class UPackage* Z_Construct_UPackage__Script_BlinkCombatSystem();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern BLINKCOMBATSYSTEM_API class UScriptStruct* Z_Construct_UScriptStruct_FBaseAblityStruct();
		extern BLINKCOMBATSYSTEM_API uint32 Get_Z_Construct_UScriptStruct_FBaseAblityStruct_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBaseAblityStruct, Z_Construct_UPackage__Script_BlinkCombatSystem(), TEXT("BaseAblityStruct"), sizeof(FBaseAblityStruct), Get_Z_Construct_UScriptStruct_FBaseAblityStruct_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBaseAblityStruct(FBaseAblityStruct::StaticStruct, TEXT("/Script/BlinkCombatSystem"), TEXT("BaseAblityStruct"), false, nullptr, nullptr);
static struct FScriptStruct_BlinkCombatSystem_StaticRegisterNativesFBaseAblityStruct
{
	FScriptStruct_BlinkCombatSystem_StaticRegisterNativesFBaseAblityStruct()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BaseAblityStruct")),new UScriptStruct::TCppStructOps<FBaseAblityStruct>);
	}
} ScriptStruct_BlinkCombatSystem_StaticRegisterNativesFBaseAblityStruct;
	void UBaseAbility::OnAffect_Multi(UBlinkCombatSystemComponent* BCS)
	{
		BaseAbility_eventOnAffect_Multi_Parms Parms;
		Parms.BCS=BCS;
		ProcessEvent(FindFunctionChecked(BLINKCOMBATSYSTEM_OnAffect_Multi),&Parms);
	}
	bool UBaseAbility::OnUse_Server(UBlinkCombatSystemComponent* BCS)
	{
		BaseAbility_eventOnUse_Server_Parms Parms;
		Parms.BCS=BCS;
		ProcessEvent(FindFunctionChecked(BLINKCOMBATSYSTEM_OnUse_Server),&Parms);
		return !!Parms.ReturnValue;
	}
	void UBaseAbility::StaticRegisterNativesUBaseAbility()
	{
		FNativeFunctionRegistrar::RegisterFunction(UBaseAbility::StaticClass(), "OnAffect_Multi",(Native)&UBaseAbility::execOnAffect_Multi);
		FNativeFunctionRegistrar::RegisterFunction(UBaseAbility::StaticClass(), "OnUse_Server",(Native)&UBaseAbility::execOnUse_Server);
	}
	IMPLEMENT_CLASS(UBaseAbility, 1244218182);
	void UBlinkCombatSystemComponent::OnAbilityAffect(int32 index)
	{
		BlinkCombatSystemComponent_eventOnAbilityAffect_Parms Parms;
		Parms.index=index;
		ProcessEvent(FindFunctionChecked(BLINKCOMBATSYSTEM_OnAbilityAffect),&Parms);
	}
	void UBlinkCombatSystemComponent::UseAbility(int32 index)
	{
		BlinkCombatSystemComponent_eventUseAbility_Parms Parms;
		Parms.index=index;
		ProcessEvent(FindFunctionChecked(BLINKCOMBATSYSTEM_UseAbility),&Parms);
	}
	void UBlinkCombatSystemComponent::StaticRegisterNativesUBlinkCombatSystemComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UBlinkCombatSystemComponent::StaticClass(), "GetAtk",(Native)&UBlinkCombatSystemComponent::execGetAtk);
		FNativeFunctionRegistrar::RegisterFunction(UBlinkCombatSystemComponent::StaticClass(), "GetAtkSpeed",(Native)&UBlinkCombatSystemComponent::execGetAtkSpeed);
		FNativeFunctionRegistrar::RegisterFunction(UBlinkCombatSystemComponent::StaticClass(), "GetDef",(Native)&UBlinkCombatSystemComponent::execGetDef);
		FNativeFunctionRegistrar::RegisterFunction(UBlinkCombatSystemComponent::StaticClass(), "GetDefaultAbilityObj",(Native)&UBlinkCombatSystemComponent::execGetDefaultAbilityObj);
		FNativeFunctionRegistrar::RegisterFunction(UBlinkCombatSystemComponent::StaticClass(), "GetHP",(Native)&UBlinkCombatSystemComponent::execGetHP);
		FNativeFunctionRegistrar::RegisterFunction(UBlinkCombatSystemComponent::StaticClass(), "GetMaxHP",(Native)&UBlinkCombatSystemComponent::execGetMaxHP);
		FNativeFunctionRegistrar::RegisterFunction(UBlinkCombatSystemComponent::StaticClass(), "GetMaxMP",(Native)&UBlinkCombatSystemComponent::execGetMaxMP);
		FNativeFunctionRegistrar::RegisterFunction(UBlinkCombatSystemComponent::StaticClass(), "GetMoveSpeed",(Native)&UBlinkCombatSystemComponent::execGetMoveSpeed);
		FNativeFunctionRegistrar::RegisterFunction(UBlinkCombatSystemComponent::StaticClass(), "GetMP",(Native)&UBlinkCombatSystemComponent::execGetMP);
		FNativeFunctionRegistrar::RegisterFunction(UBlinkCombatSystemComponent::StaticClass(), "IsCD",(Native)&UBlinkCombatSystemComponent::execIsCD);
		FNativeFunctionRegistrar::RegisterFunction(UBlinkCombatSystemComponent::StaticClass(), "IsIndexValid",(Native)&UBlinkCombatSystemComponent::execIsIndexValid);
		FNativeFunctionRegistrar::RegisterFunction(UBlinkCombatSystemComponent::StaticClass(), "OnAbilityAffect",(Native)&UBlinkCombatSystemComponent::execOnAbilityAffect);
		FNativeFunctionRegistrar::RegisterFunction(UBlinkCombatSystemComponent::StaticClass(), "TryUseAbility",(Native)&UBlinkCombatSystemComponent::execTryUseAbility);
		FNativeFunctionRegistrar::RegisterFunction(UBlinkCombatSystemComponent::StaticClass(), "UseAbility",(Native)&UBlinkCombatSystemComponent::execUseAbility);
	}
	IMPLEMENT_CLASS(UBlinkCombatSystemComponent, 2933787272);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTimerHandle();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	ENGINE_API class UClass* Z_Construct_UClass_UActorComponent();

	BLINKCOMBATSYSTEM_API class UEnum* Z_Construct_UEnum_BlinkCombatSystem_EAbilityResult();
	BLINKCOMBATSYSTEM_API class UScriptStruct* Z_Construct_UScriptStruct_FBaseAblityStruct();
	BLINKCOMBATSYSTEM_API class UFunction* Z_Construct_UFunction_UBaseAbility_OnAffect_Multi();
	BLINKCOMBATSYSTEM_API class UFunction* Z_Construct_UFunction_UBaseAbility_OnUse_Server();
	BLINKCOMBATSYSTEM_API class UClass* Z_Construct_UClass_UBaseAbility_NoRegister();
	BLINKCOMBATSYSTEM_API class UClass* Z_Construct_UClass_UBaseAbility();
	BLINKCOMBATSYSTEM_API class UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_GetAtk();
	BLINKCOMBATSYSTEM_API class UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_GetAtkSpeed();
	BLINKCOMBATSYSTEM_API class UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_GetDef();
	BLINKCOMBATSYSTEM_API class UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_GetDefaultAbilityObj();
	BLINKCOMBATSYSTEM_API class UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_GetHP();
	BLINKCOMBATSYSTEM_API class UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_GetMaxHP();
	BLINKCOMBATSYSTEM_API class UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_GetMaxMP();
	BLINKCOMBATSYSTEM_API class UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_GetMoveSpeed();
	BLINKCOMBATSYSTEM_API class UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_GetMP();
	BLINKCOMBATSYSTEM_API class UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_IsCD();
	BLINKCOMBATSYSTEM_API class UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_IsIndexValid();
	BLINKCOMBATSYSTEM_API class UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_OnAbilityAffect();
	BLINKCOMBATSYSTEM_API class UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_TryUseAbility();
	BLINKCOMBATSYSTEM_API class UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_UseAbility();
	BLINKCOMBATSYSTEM_API class UClass* Z_Construct_UClass_UBlinkCombatSystemComponent_NoRegister();
	BLINKCOMBATSYSTEM_API class UClass* Z_Construct_UClass_UBlinkCombatSystemComponent();
	BLINKCOMBATSYSTEM_API class UPackage* Z_Construct_UPackage__Script_BlinkCombatSystem();
	UEnum* Z_Construct_UEnum_BlinkCombatSystem_EAbilityResult()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_BlinkCombatSystem();
		extern uint32 Get_Z_Construct_UEnum_BlinkCombatSystem_EAbilityResult_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EAbilityResult"), 0, Get_Z_Construct_UEnum_BlinkCombatSystem_EAbilityResult_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EAbilityResult"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAbilityResult::EOK")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAbilityResult::ECD")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAbilityResult::EFail")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAbilityResult::EError")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAbilityResult::EAbilityResult_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EAbilityResult");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/BaseAbility.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_BlinkCombatSystem_EAbilityResult_CRC() { return 3326577438U; }
	UScriptStruct* Z_Construct_UScriptStruct_FBaseAblityStruct()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_BlinkCombatSystem();
		extern uint32 Get_Z_Construct_UScriptStruct_FBaseAblityStruct_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("BaseAblityStruct"), sizeof(FBaseAblityStruct), Get_Z_Construct_UScriptStruct_FBaseAblityStruct_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BaseAblityStruct"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FBaseAblityStruct>, EStructFlags(0x00000001));
			UProperty* NewProp_AbilityObj = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AbilityObj"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(AbilityObj, FBaseAblityStruct), 0x0014000000000005, Z_Construct_UClass_UBaseAbility_NoRegister(), UClass::StaticClass());
			UProperty* NewProp_CDTimerH = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CDTimerH"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(CDTimerH, FBaseAblityStruct), 0x0010000000000005, Z_Construct_UScriptStruct_FTimerHandle());
			UProperty* NewProp_CD = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CD"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CD, FBaseAblityStruct), 0x0010000000000005);
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Name, FBaseAblityStruct), 0x0010000000000005);
			UProperty* NewProp_ID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ID"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ID, FBaseAblityStruct), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/BaseAbility.h"));
			MetaData->SetValue(NewProp_AbilityObj, TEXT("Category"), TEXT("Ability"));
			MetaData->SetValue(NewProp_AbilityObj, TEXT("ModuleRelativePath"), TEXT("Public/BaseAbility.h"));
			MetaData->SetValue(NewProp_CDTimerH, TEXT("Category"), TEXT("Ability"));
			MetaData->SetValue(NewProp_CDTimerH, TEXT("ModuleRelativePath"), TEXT("Public/BaseAbility.h"));
			MetaData->SetValue(NewProp_CD, TEXT("Category"), TEXT("Ability"));
			MetaData->SetValue(NewProp_CD, TEXT("ModuleRelativePath"), TEXT("Public/BaseAbility.h"));
			MetaData->SetValue(NewProp_Name, TEXT("Category"), TEXT("Ability"));
			MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("Public/BaseAbility.h"));
			MetaData->SetValue(NewProp_ID, TEXT("Category"), TEXT("Ability"));
			MetaData->SetValue(NewProp_ID, TEXT("ModuleRelativePath"), TEXT("Public/BaseAbility.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FBaseAblityStruct_CRC() { return 2181410548U; }
	UFunction* Z_Construct_UFunction_UBaseAbility_OnAffect_Multi()
	{
		UObject* Outer=Z_Construct_UClass_UBaseAbility();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnAffect_Multi"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x0C020C00, 65535, sizeof(BaseAbility_eventOnAffect_Multi_Parms));
			UProperty* NewProp_BCS = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BCS"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(BCS, BaseAbility_eventOnAffect_Multi_Parms), 0x0010000000080080, Z_Construct_UClass_UBlinkCombatSystemComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Ability"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BaseAbility.h"));
			MetaData->SetValue(NewProp_BCS, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBaseAbility_OnUse_Server()
	{
		UObject* Outer=Z_Construct_UClass_UBaseAbility();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnUse_Server"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x0C020C00, 65535, sizeof(BaseAbility_eventOnUse_Server_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, BaseAbility_eventOnUse_Server_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, BaseAbility_eventOnUse_Server_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, BaseAbility_eventOnUse_Server_Parms), sizeof(bool), true);
			UProperty* NewProp_BCS = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BCS"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(BCS, BaseAbility_eventOnUse_Server_Parms), 0x0010000000080080, Z_Construct_UClass_UBlinkCombatSystemComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Ability"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BaseAbility.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Replicate"));
			MetaData->SetValue(NewProp_BCS, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UBaseAbility_NoRegister()
	{
		return UBaseAbility::StaticClass();
	}
	UClass* Z_Construct_UClass_UBaseAbility()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_BlinkCombatSystem();
			OuterClass = UBaseAbility::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_UBaseAbility_OnAffect_Multi());
				OuterClass->LinkChild(Z_Construct_UFunction_UBaseAbility_OnUse_Server());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBaseAbility_OnAffect_Multi(), "OnAffect_Multi"); // 2305360879
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBaseAbility_OnUse_Server(), "OnUse_Server"); // 581681830
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BaseAbility.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/BaseAbility.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBaseAbility(Z_Construct_UClass_UBaseAbility, &UBaseAbility::StaticClass, TEXT("UBaseAbility"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBaseAbility);
	UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_GetAtk()
	{
		struct BlinkCombatSystemComponent_eventGetAtk_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlinkCombatSystemComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetAtk"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(BlinkCombatSystemComponent_eventGetAtk_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, BlinkCombatSystemComponent_eventGetAtk_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Properties"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_GetAtkSpeed()
	{
		struct BlinkCombatSystemComponent_eventGetAtkSpeed_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlinkCombatSystemComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetAtkSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(BlinkCombatSystemComponent_eventGetAtkSpeed_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, BlinkCombatSystemComponent_eventGetAtkSpeed_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Properties"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_GetDef()
	{
		struct BlinkCombatSystemComponent_eventGetDef_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlinkCombatSystemComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetDef"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(BlinkCombatSystemComponent_eventGetDef_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, BlinkCombatSystemComponent_eventGetDef_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Properties"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_GetDefaultAbilityObj()
	{
		struct BlinkCombatSystemComponent_eventGetDefaultAbilityObj_Parms
		{
			int32 index;
			UBaseAbility* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlinkCombatSystemComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetDefaultAbilityObj"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(BlinkCombatSystemComponent_eventGetDefaultAbilityObj_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, BlinkCombatSystemComponent_eventGetDefaultAbilityObj_Parms), 0x0010000000000580, Z_Construct_UClass_UBaseAbility_NoRegister());
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(index, BlinkCombatSystemComponent_eventGetDefaultAbilityObj_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("BCS|Ability"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_GetHP()
	{
		struct BlinkCombatSystemComponent_eventGetHP_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlinkCombatSystemComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetHP"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(BlinkCombatSystemComponent_eventGetHP_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, BlinkCombatSystemComponent_eventGetHP_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Properties|HP"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Getters"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_GetMaxHP()
	{
		struct BlinkCombatSystemComponent_eventGetMaxHP_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlinkCombatSystemComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetMaxHP"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(BlinkCombatSystemComponent_eventGetMaxHP_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, BlinkCombatSystemComponent_eventGetMaxHP_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Properties|HP"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_GetMaxMP()
	{
		struct BlinkCombatSystemComponent_eventGetMaxMP_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlinkCombatSystemComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetMaxMP"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(BlinkCombatSystemComponent_eventGetMaxMP_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, BlinkCombatSystemComponent_eventGetMaxMP_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Properties|MP"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_GetMoveSpeed()
	{
		struct BlinkCombatSystemComponent_eventGetMoveSpeed_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlinkCombatSystemComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetMoveSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(BlinkCombatSystemComponent_eventGetMoveSpeed_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, BlinkCombatSystemComponent_eventGetMoveSpeed_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Properties"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_GetMP()
	{
		struct BlinkCombatSystemComponent_eventGetMP_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlinkCombatSystemComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetMP"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(BlinkCombatSystemComponent_eventGetMP_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, BlinkCombatSystemComponent_eventGetMP_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Properties|MP"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_IsCD()
	{
		struct BlinkCombatSystemComponent_eventIsCD_Parms
		{
			int32 index;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlinkCombatSystemComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsCD"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(BlinkCombatSystemComponent_eventIsCD_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, BlinkCombatSystemComponent_eventIsCD_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, BlinkCombatSystemComponent_eventIsCD_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, BlinkCombatSystemComponent_eventIsCD_Parms), sizeof(bool), true);
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(index, BlinkCombatSystemComponent_eventIsCD_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("BCS|Ability"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_IsIndexValid()
	{
		struct BlinkCombatSystemComponent_eventIsIndexValid_Parms
		{
			int32 index;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlinkCombatSystemComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsIndexValid"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(BlinkCombatSystemComponent_eventIsIndexValid_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, BlinkCombatSystemComponent_eventIsIndexValid_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, BlinkCombatSystemComponent_eventIsIndexValid_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, BlinkCombatSystemComponent_eventIsIndexValid_Parms), sizeof(bool), true);
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(index, BlinkCombatSystemComponent_eventIsIndexValid_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("BCS|Ability"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_OnAbilityAffect()
	{
		UObject* Outer=Z_Construct_UClass_UBlinkCombatSystemComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnAbilityAffect"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04024CC0, 65535, sizeof(BlinkCombatSystemComponent_eventOnAbilityAffect_Parms));
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(index, BlinkCombatSystemComponent_eventOnAbilityAffect_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("BCS|Ability"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_TryUseAbility()
	{
		struct BlinkCombatSystemComponent_eventTryUseAbility_Parms
		{
			int32 Index;
			EAbilityResult ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UBlinkCombatSystemComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TryUseAbility"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(BlinkCombatSystemComponent_eventTryUseAbility_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UEnumProperty(CPP_PROPERTY_BASE(ReturnValue, BlinkCombatSystemComponent_eventTryUseAbility_Parms), 0x0010000000000580, Z_Construct_UEnum_BlinkCombatSystem_EAbilityResult());
			UProperty* NewProp_ReturnValue_Underlying = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("UnderlyingType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_Index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Index"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(Index, BlinkCombatSystemComponent_eventTryUseAbility_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("BCS|Ability"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Core Functions"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UBlinkCombatSystemComponent_UseAbility()
	{
		UObject* Outer=Z_Construct_UClass_UBlinkCombatSystemComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UseAbility"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x84220CC0, 65535, sizeof(BlinkCombatSystemComponent_eventUseAbility_Parms));
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(index, BlinkCombatSystemComponent_eventUseAbility_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("BCS|Ability"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UBlinkCombatSystemComponent_NoRegister()
	{
		return UBlinkCombatSystemComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UBlinkCombatSystemComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_BlinkCombatSystem();
			OuterClass = UBlinkCombatSystemComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UBlinkCombatSystemComponent_GetAtk());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlinkCombatSystemComponent_GetAtkSpeed());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlinkCombatSystemComponent_GetDef());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlinkCombatSystemComponent_GetDefaultAbilityObj());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlinkCombatSystemComponent_GetHP());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlinkCombatSystemComponent_GetMaxHP());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlinkCombatSystemComponent_GetMaxMP());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlinkCombatSystemComponent_GetMoveSpeed());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlinkCombatSystemComponent_GetMP());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlinkCombatSystemComponent_IsCD());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlinkCombatSystemComponent_IsIndexValid());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlinkCombatSystemComponent_OnAbilityAffect());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlinkCombatSystemComponent_TryUseAbility());
				OuterClass->LinkChild(Z_Construct_UFunction_UBlinkCombatSystemComponent_UseAbility());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BaseMP = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseMP"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseMP, UBlinkCombatSystemComponent), 0x0010000000000025);
				UProperty* NewProp_BaseHP = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseHP"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseHP, UBlinkCombatSystemComponent), 0x0010000000000025);
				UProperty* NewProp_BaseMoveSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseMoveSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseMoveSpeed, UBlinkCombatSystemComponent), 0x0010000000000025);
				UProperty* NewProp_BaseDef = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseDef"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseDef, UBlinkCombatSystemComponent), 0x0010000000000025);
				UProperty* NewProp_BaseAtkSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseAtkSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseAtkSpeed, UBlinkCombatSystemComponent), 0x0010000000000025);
				UProperty* NewProp_BaseAtk = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseAtk"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseAtk, UBlinkCombatSystemComponent), 0x0010000000000025);
				UProperty* NewProp_BaseMaxMP = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseMaxMP"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseMaxMP, UBlinkCombatSystemComponent), 0x0010000000000025);
				UProperty* NewProp_BaseMaxHP = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseMaxHP"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseMaxHP, UBlinkCombatSystemComponent), 0x0010000000000025);
				UProperty* NewProp_Abilities = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Abilities"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Abilities, UBlinkCombatSystemComponent), 0x0010000000000005);
				UProperty* NewProp_Abilities_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Abilities, TEXT("Abilities"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FBaseAblityStruct());
				UProperty* NewProp_CoolDownTimer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CoolDownTimer"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(CoolDownTimer, UBlinkCombatSystemComponent), 0x0010000000000005, Z_Construct_UScriptStruct_FTimerHandle());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBlinkCombatSystemComponent_GetAtk(), "GetAtk"); // 230529301
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBlinkCombatSystemComponent_GetAtkSpeed(), "GetAtkSpeed"); // 1994407394
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBlinkCombatSystemComponent_GetDef(), "GetDef"); // 398630839
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBlinkCombatSystemComponent_GetDefaultAbilityObj(), "GetDefaultAbilityObj"); // 3025896187
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBlinkCombatSystemComponent_GetHP(), "GetHP"); // 4045448511
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBlinkCombatSystemComponent_GetMaxHP(), "GetMaxHP"); // 1065737096
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBlinkCombatSystemComponent_GetMaxMP(), "GetMaxMP"); // 673254026
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBlinkCombatSystemComponent_GetMoveSpeed(), "GetMoveSpeed"); // 2036007243
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBlinkCombatSystemComponent_GetMP(), "GetMP"); // 633383018
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBlinkCombatSystemComponent_IsCD(), "IsCD"); // 1703402241
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBlinkCombatSystemComponent_IsIndexValid(), "IsIndexValid"); // 3042671776
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBlinkCombatSystemComponent_OnAbilityAffect(), "OnAbilityAffect"); // 2002399503
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBlinkCombatSystemComponent_TryUseAbility(), "TryUseAbility"); // 2541001008
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UBlinkCombatSystemComponent_UseAbility(), "UseAbility"); // 1743522801
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BlinkCombatSystemComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
				MetaData->SetValue(NewProp_BaseMP, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_BaseMP, TEXT("Category"), TEXT("Properties"));
				MetaData->SetValue(NewProp_BaseMP, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
				MetaData->SetValue(NewProp_BaseHP, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_BaseHP, TEXT("Category"), TEXT("Properties"));
				MetaData->SetValue(NewProp_BaseHP, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
				MetaData->SetValue(NewProp_BaseMoveSpeed, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_BaseMoveSpeed, TEXT("Category"), TEXT("Properties"));
				MetaData->SetValue(NewProp_BaseMoveSpeed, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
				MetaData->SetValue(NewProp_BaseDef, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_BaseDef, TEXT("Category"), TEXT("Properties"));
				MetaData->SetValue(NewProp_BaseDef, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
				MetaData->SetValue(NewProp_BaseAtkSpeed, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_BaseAtkSpeed, TEXT("Category"), TEXT("Properties"));
				MetaData->SetValue(NewProp_BaseAtkSpeed, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
				MetaData->SetValue(NewProp_BaseAtk, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_BaseAtk, TEXT("Category"), TEXT("Properties"));
				MetaData->SetValue(NewProp_BaseAtk, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
				MetaData->SetValue(NewProp_BaseMaxMP, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_BaseMaxMP, TEXT("Category"), TEXT("Properties"));
				MetaData->SetValue(NewProp_BaseMaxMP, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
				MetaData->SetValue(NewProp_BaseMaxHP, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_BaseMaxHP, TEXT("Category"), TEXT("Properties"));
				MetaData->SetValue(NewProp_BaseMaxHP, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
				MetaData->SetValue(NewProp_BaseMaxHP, TEXT("ToolTip"), TEXT("Replicated"));
				MetaData->SetValue(NewProp_Abilities, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_Abilities, TEXT("Category"), TEXT("Properties"));
				MetaData->SetValue(NewProp_Abilities, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
				MetaData->SetValue(NewProp_CoolDownTimer, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_CoolDownTimer, TEXT("Category"), TEXT("TimerHandle"));
				MetaData->SetValue(NewProp_CoolDownTimer, TEXT("ModuleRelativePath"), TEXT("Public/BlinkCombatSystemComponent.h"));
				MetaData->SetValue(NewProp_CoolDownTimer, TEXT("ToolTip"), TEXT("Not Replicated"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UBlinkCombatSystemComponent(Z_Construct_UClass_UBlinkCombatSystemComponent, &UBlinkCombatSystemComponent::StaticClass, TEXT("UBlinkCombatSystemComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UBlinkCombatSystemComponent);
	UPackage* Z_Construct_UPackage__Script_BlinkCombatSystem()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/BlinkCombatSystem")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x3EB95CC2;
			Guid.B = 0x755921F0;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
